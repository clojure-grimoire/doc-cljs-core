{:ns "cljs.core", :name "add-ifn-methods", :file "cljs/core.clj", :type :fn, :src "(defn add-ifn-methods [type type-sym [f & meths :as form]]\n  (let [meths    (map #(adapt-ifn-params type %) meths)\n        this-sym (with-meta 'self__ {:tag type})\n        argsym   (gensym \"args\")]\n    (concat\n      [`(set! ~(extend-prefix type-sym 'call) ~(with-meta `(fn ~@meths) (meta form)))\n       `(set! ~(extend-prefix type-sym 'apply)\n          ~(with-meta\n             `(fn ~[this-sym argsym]\n                (this-as ~this-sym\n                  (.apply (.-call ~this-sym) ~this-sym\n                    (.concat (array ~this-sym) (aclone ~argsym)))))\n             (meta form)))]\n      (ifn-invoke-methods type type-sym form))))", :column 1, :line 739, :arglists ([type type-sym [f & meths :as form]])}