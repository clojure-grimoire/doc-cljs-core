{:ns "cljs.core", :name "proto-assign-impls", :file "cljs/core.clj", :type :fn, :src "(defn proto-assign-impls [env resolve type-sym type [p sigs]]\n  (warn-and-update-protocol p type env)\n  (let [psym      (resolve p)\n        pprefix   (protocol-prefix psym)\n        skip-flag (set (-> type-sym meta :skip-protocol-flag))]\n    (if (= p 'Object)\n      (add-obj-methods type type-sym sigs)\n      (concat\n        (when-not (skip-flag psym)\n          [`(set! ~(extend-prefix type-sym pprefix) true)])\n        (mapcat\n          (fn [sig]\n            (if (= psym 'cljs.core/IFn)\n              (add-ifn-methods type type-sym sig)\n              (add-proto-methods* pprefix type type-sym sig)))\n          sigs)))))", :column 1, :line 766, :arglists ([env resolve type-sym type [p sigs]])}