{:ns "cljs.source-map", :name "decode", :file "cljs/source_map.clj", :type :fn, :src "(defn decode\n  \"Convert a v3 source map JSON object into a nested sorted map \n   organized as file, line, and column.\"\n  ([source-map]\n     (decode (:mappings source-map) source-map))\n  ([mappings source-map]\n     (let [{:keys [sources]} source-map\n           relseg-init [0 0 0 0 0]\n           lines (seq (string/split mappings #\";\"))]\n       (loop [gline 0\n              lines lines\n              relseg relseg-init\n              result (sorted-map-by (source-compare sources))]\n         (if lines\n           (let [line (first lines)\n                 [result relseg]\n                 (if (string/blank? line)\n                   [result relseg]\n                   (let [segs (seq (string/split line #\",\"))]\n                     (loop [segs segs relseg relseg result result]\n                       (if segs\n                         (let [seg (first segs)\n                               nrelseg (seg-combine (base64-vlq/decode seg) relseg)]\n                           (recur (next segs) nrelseg\n                             (update-result result (seg->map nrelseg source-map) gline)))\n                         [result relseg]))))]\n             (recur (inc gline) (next lines) (assoc relseg 0 0) result))\n           result)))))", :column 1, :line 100, :arglists ([source-map] [mappings source-map]), :doc "Convert a v3 source map JSON object into a nested sorted map \n   organized as file, line, and column."}