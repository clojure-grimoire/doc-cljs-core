{:ns "cljs.compiler", :name "emits", :file "cljs/compiler.clj", :type :fn, :src "(defn emits [& xs]\n  (doseq [x xs]\n    (cond\n     (nil? x) nil\n     (map? x) (emit x)\n     (seq? x) (apply emits x)\n     (fn? x)  (x)\n     :else (let [s (print-str x)]\n             (when *source-map-data*\n               (swap! *source-map-data*\n                 update-in [:gen-col] #(+ % (count s))))\n             (print s))))\n  nil)", :column 1, :line 137, :arglists ([& xs])}