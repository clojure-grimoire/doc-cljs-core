{:ns "cljs.analyzer", :name "analyze-symbol", :file "cljs/analyzer.clj", :type :fn, :src "(defn analyze-symbol\n  \"Finds the var associated with sym\"\n  [env sym]\n  (if (:quoted? env)\n    {:op :constant :env env :form sym :tag 'cljs.core/Symbol}\n    (let [{:keys [line column]} (meta sym)\n          env (cond-> env\n                line (assoc :line line)\n                column (assoc :column column))\n          ret {:env env :form sym}\n          lb (-> env :locals sym)]\n      (if lb\n        (assoc ret :op :var :info lb)\n        (if-not (:def-var env)\n          (assoc ret :op :var :info\n            (if-not (contains? (meta sym) ::analyzed)\n              (resolve-existing-var env sym)\n              (resolve-var env sym)))\n          (let [ret (assoc ret :op :var :info (resolve-var env sym))]\n            (if-let [test (-> sym meta :test)]\n              (assoc ret :test (analyze (assoc env :locals (:test-locals env)) test))\n              ret)))))))", :column 1, :line 1426, :arglists ([env sym]), :doc "Finds the var associated with sym"}