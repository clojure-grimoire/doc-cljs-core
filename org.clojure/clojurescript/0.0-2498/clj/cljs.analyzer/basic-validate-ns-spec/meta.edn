{:ns "cljs.analyzer", :name "basic-validate-ns-spec", :file "cljs/analyzer.clj", :type :fn, :src "(defn basic-validate-ns-spec [env macros? spec]\n  (when-not (or (symbol? spec) (sequential? spec))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"))))\n  (when (sequential? spec)\n    (when-not (symbol? (first spec))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Library name must be specified as a symbol in :require / :require-macros\"))))\n    (when-not (odd? (count spec))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as alias and :refer (names) options supported in :require\"))))\n    (when-not (every? #{:as :refer} (map first (partition 2 (next spec))))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as and :refer options supported in :require / :require-macros\"))))\n    (when-not (let [fs (frequencies (next spec))]\n                (and (<= (fs :as 0) 1)\n                     (<= (fs :refer 0) 1)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Each of :as and :refer options may only be specified once in :require / :require-macros\"))))))", :column 1, :line 1053, :arglists ([env macros? spec])}