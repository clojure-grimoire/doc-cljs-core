{:ns "cljs.analyzer", :name "analyze-seq", :file "cljs/analyzer.clj", :type :fn, :src "(defn analyze-seq\n  ([env form name] (analyze-seq env form name nil))\n  ([env form name opts]\n     (if (:quoted? env)\n       (analyze-list env form)\n       (let [env (assoc env\n                   :line (or (-> form meta :line)\n                           (:line env))\n                   :column (or (-> form meta :column)\n                             (:column env)))]\n         (let [op (first form)]\n           (when (nil? op)\n             (throw (error env \"Can't call nil\")))\n           (let [mform (macroexpand-1 env form)]\n             (if (identical? form mform)\n               (wrapping-errors env\n                 (if (specials op)\n                   (parse op env form name opts)\n                   (parse-invoke env form)))\n               (analyze env mform name opts))))))))", :column 1, :line 1501, :arglists ([env form name] [env form name opts])}