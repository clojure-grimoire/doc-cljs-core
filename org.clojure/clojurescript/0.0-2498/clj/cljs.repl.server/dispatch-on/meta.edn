{:ns "cljs.repl.server", :name "dispatch-on", :file "cljs/repl/server.clj", :type :fn, :src "(defn dispatch-on\n  \"Registers a handler to be dispatched based on a request method and a\n  predicate.\n\n  pred should be a function that accepts an options map, a connection,\n  and a request map and returns a boolean value based on whether or not\n  that request should be dispatched to the related handler.\"\n  ([method pred handler]\n     (dispatch-on method {:pred pred :handler handler}))\n  ([method {:as m}]\n     (swap! handlers (fn [old]\n                       (update-in old [method] #(conj (vec %) m))))))", :column 1, :line 46, :arglists ([method pred handler] [method {:as m}]), :doc "Registers a handler to be dispatched based on a request method and a\n  predicate.\n\n  pred should be a function that accepts an options map, a connection,\n  and a request map and returns a boolean value based on whether or not\n  that request should be dispatched to the related handler."}