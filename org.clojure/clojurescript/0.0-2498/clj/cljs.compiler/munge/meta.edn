{:ns "cljs.compiler", :name "munge", :file "cljs/compiler.clj", :type :fn, :src "(defn munge\n  ([s] (munge s js-reserved))\n  ([s reserved]\n    (if (map? s)\n      ; Unshadowing\n      (let [{:keys [name field] :as info} s\n            depth (shadow-depth s)\n            renamed (*lexical-renames* (System/identityHashCode s))\n            munged-name (munge (cond field (str \"self__.\" name)\n                                     renamed renamed\n                                     :else name)\n                               reserved)]\n        (if (or field (zero? depth))\n          munged-name\n          (symbol (str munged-name \"__$\" depth))))\n      ; String munging\n      (let [ss (string/replace (str s) #\"\\/(.)\" \".$1\") ; Division is special\n            ss (apply str (map #(if (reserved %) (str % \"$\") %)\n                               (string/split ss #\"(?<=\\.)|(?=\\.)\")))\n            ms (clojure.lang.Compiler/munge ss)]\n        (if (symbol? s)\n          (symbol ms)\n          ms)))))", :column 1, :line 61, :arglists ([s] [s reserved])}