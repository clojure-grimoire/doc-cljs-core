{:ns "cljs.compiler", :name "emit", :file "cljs/compiler.clj", :type :fn, :src "(defn emit [ast]\n  (env/ensure\n    (when *source-map-data*\n      (let [{:keys [env]} ast]\n        (when (:line env)\n          (let [{:keys [line column]} env]\n            (swap! *source-map-data*\n              (fn [m]\n                (let [minfo (cond-> {:gcol (:gen-col m)\n                                     :gline (:gen-line m)}\n                              (= (:op ast) :var)\n                              (assoc :name (str (-> ast :info :name))))]\n                  ; Dec the line/column numbers for 0-indexing.\n                  ; tools.reader uses 1-indexed sources, chrome\n                  ; expects 0-indexed source maps.\n                  (update-in m [:source-map (dec line)]\n                    (fnil (fn [line]\n                            (update-in line [(if column (dec column) 0)]\n                              (fnil (fn [column] (conj column minfo)) [])))\n                      (sorted-map))))))))))\n    (emit* ast)))", :column 1, :line 115, :arglists ([ast])}