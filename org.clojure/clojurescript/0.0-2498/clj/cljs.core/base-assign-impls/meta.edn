{:ns "cljs.core", :name "base-assign-impls", :file "cljs/core.clj", :type :fn, :src "(defn base-assign-impls [env resolve tsym type [p sigs]]\n  (warn-and-update-protocol p tsym env)\n  (let [psym       (resolve p)\n        pfn-prefix (subs (core/str psym) 0\n                     (clojure.core/inc (.indexOf (core/str psym) \"/\")))]\n    (cons `(aset ~psym ~type true)\n      (map (fn [[f & meths :as form]]\n             `(aset ~(symbol (core/str pfn-prefix f))\n                ~type ~(with-meta `(fn ~@meths) (meta form))))\n        sigs))))", :column 1, :line 684, :arglists ([env resolve tsym type [p sigs]])}