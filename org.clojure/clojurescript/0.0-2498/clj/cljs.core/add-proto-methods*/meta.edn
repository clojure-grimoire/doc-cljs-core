{:ns "cljs.core", :name "add-proto-methods*", :file "cljs/core.clj", :type :fn, :src "(defn add-proto-methods* [pprefix type type-sym [f & meths :as form]]\n  (let [pf (core/str pprefix f)]\n    (if (vector? (first meths))\n      ;; single method case\n      (let [meth meths]\n        [`(set! ~(extend-prefix type-sym (core/str pf \"$arity$\" (count (first meth))))\n            ~(with-meta `(fn ~@(adapt-proto-params type meth)) (meta form)))])\n      (map (fn [[sig & body :as meth]]\n             `(set! ~(extend-prefix type-sym (core/str pf \"$arity$\" (count sig)))\n                ~(with-meta `(fn ~(adapt-proto-params type meth)) (meta form))))\n        meths))))", :column 1, :line 754, :arglists ([pprefix type type-sym [f & meths :as form]])}