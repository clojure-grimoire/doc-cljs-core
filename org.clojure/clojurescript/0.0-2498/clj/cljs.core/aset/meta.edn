{:ns "cljs.core", :name "aset", :file "cljs/core.clj", :type :macro, :src "(defmacro aset\n  ([a i v]\n    (core/list 'js* \"(~{}[~{}] = ~{})\" a i v))\n  ([a idx idx2 & idxv]\n    (let [n    (core/dec (count idxv))\n          astr (apply core/str (repeat n \"[~{}]\"))]\n      `(~'js* ~(core/str \"(~{}[~{}][~{}]\" astr \" = ~{})\") ~a ~idx ~idx2 ~@idxv))))", :column 1, :line 346, :macro true, :arglists ([a i v] [a idx idx2 & idxv])}