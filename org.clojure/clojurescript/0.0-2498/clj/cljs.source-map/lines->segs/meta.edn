{:ns "cljs.source-map", :name "lines->segs", :file "cljs/source_map.clj", :type :fn, :src "(defn lines->segs\n  \"Take a nested sorted map encoding line and column information\n   for a file and return a vector of vectors of encoded segments.\n   Each vector represents a line, and the internal vectors are segments\n   representing the contents of the line.\"\n  [lines]\n  (let [relseg (atom [0 0 0 0 0])]\n    (reduce\n      (fn [segs cols]\n        (swap! relseg\n          (fn [[_ source line col name]]\n            [0 source line col name]))\n        (conj segs\n          (reduce\n            (fn [cols [gcol sidx line col name :as seg]]\n              (let [offset (map - seg @relseg)]\n                (swap! relseg\n                  (fn [[_ _ _ _ lname]]\n                    [gcol sidx line col (or name lname)]))\n                (conj cols (base64-vlq/encode offset))))\n            [] cols)))\n      [] lines)))", :column 1, :line 132, :arglists ([lines]), :doc "Take a nested sorted map encoding line and column information\n   for a file and return a vector of vectors of encoded segments.\n   Each vector represents a line, and the internal vectors are segments\n   representing the contents of the line."}