{:ns "cljs.closure", :name "compile-from-jar", :file "cljs/closure.clj", :type :fn, :src "(defn compile-from-jar\n  \"Compile a file from a jar.\"\n  [this {:keys [output-file] :as opts}]\n  (or (when output-file\n        (let [out-file (io/file (output-directory opts) output-file)]\n          (when (and (.exists out-file)\n                     (= (util/compiled-by-version out-file)\n                        (util/clojurescript-version)))\n            (compile-file\n              (io/file (output-directory opts)\n                (last (string/split (.getPath ^URL this) #\"\\.jar!/\")))\n              opts))))\n      (let [file-on-disk (jar-file-to-disk this (output-directory opts))]\n        (-compile file-on-disk opts))))", :column 1, :line 373, :arglists ([this {:keys [output-file], :as opts}]), :doc "Compile a file from a jar."}