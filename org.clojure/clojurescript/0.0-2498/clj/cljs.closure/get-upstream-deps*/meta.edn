{:ns "cljs.closure", :name "get-upstream-deps*", :file "cljs/closure.clj", :type :fn, :src "(defn get-upstream-deps* \n  \"returns a merged map containing all upstream dependencies defined by libraries on the classpath\"\n  []\n  (let [classloader (. (Thread/currentThread) (getContextClassLoader))\n        upstream-deps (map #(read-string (slurp %)) (enumeration-seq (. classloader (findResources \"deps.cljs\"))))]\n    (doseq [dep upstream-deps]\n      (println (str \"Upstream deps.cljs found on classpath. \" dep \" This is an EXPERIMENTAL FEATURE and is not guarenteed to remain stable in future versions.\")))\n    (apply merge-with concat upstream-deps)))", :column 1, :line 842, :arglists ([]), :doc "returns a merged map containing all upstream dependencies defined by libraries on the classpath"}