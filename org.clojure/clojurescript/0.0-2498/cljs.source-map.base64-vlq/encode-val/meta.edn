{:ns "cljs.source-map.base64-vlq", :name "encode-val", :file "cljs/source_map/base64_vlq.clj", :type :fn, :src "(defn encode-val [n]\n  (let [sb (StringBuilder.)\n        vlq (to-vlq-signed n)]\n    (loop [digit (bit-and vlq vlq-base-mask)\n           vlq   (bit-shift-right-zero-fill vlq vlq-base-shift)]\n      (if (pos? vlq)\n        (let [digit (bit-or digit vlq-continuation-bit)]\n          (.append sb (base64/encode digit))\n          (recur (bit-and vlq vlq-base-mask)\n                 (bit-shift-right-zero-fill vlq vlq-base-shift)))\n        (.append sb (base64/encode digit))))\n    (str sb)))", :column 1, :line 25, :arglists ([n])}